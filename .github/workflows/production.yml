# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql database: growth_analysis
        mysql user: tester
        mysql password: MysqlPolicy@123456
    - name: Generate Environment Variables File for Production
      run: |
        echo "DB_URL=$DB_URL" >> env.properties
        echo "DB_DATABASE=$DB_DATABASE" >> env.properties
        echo "DB_URL_PARAMS=$DB_URL_PARAMS" >> env.properties
        echo "DB_USER=$DB_USER" >> env.properties
        echo "DB_PASSWORD=$DB_PASSWORD" >> env.properties
      env:
        DB_URL: ${{ secrets.DB_URL }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_URL_PARAMS: ${{ secrets.DB_URL_PARAMS }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test
    - name: Test with Gradle
      run: ./gradlew test
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }}
      with:
        files: build/test-results/**/*.xml
